#!/bin/bash -e

# ---- build env controls

. /etc/env

if [[ "$1" == "-c" ]]; then
    COPY_REF="1"
    shift
else
    COPY_REF="0"
fi

# ---- prep build envir

STAMP="/tmp/init-stamp"
if [[ -f "$STAMP" ]]; then
  echo "${STAMP} already exists.  delete it if you really want to re-init.  skiping to builder phase."
  exec /etc/builder "$@"
fi

echo ">> fix ownerships of mapped uids from build stage"
chown -R root.root /root/.ssh


# ---- get container source data

echo ">> pull source"
cd ${HOME}

if [[ "$COPY_REF" == "1" ]]; then
    echo "cloning ktools from reference copy"
    cp -pr ktools-ref ktools

elif [[ -d ktools ]]; then
    read -p "${HOME}/ktools already exists; wipe and redownload from git? " x
    if [[ "$x" == "y" ]]; then rm -rf ktools; fi
fi

echo "cloning ktools from git"
if [[ ! -d ktools ]]; then
    git clone git:git/ktools
else
    echo "ktools/ already exists; skipping git clone."
fi

# make externally mounted private.d visible to the build area.
cd ktools
[[ -L private.d ]] || ln -s ../ktools-ref/private.d

echo ">> install docker infra"
cd docker-infrastructure
make
make install

touch $STAMP

# ---- xfer to builder script

cd ${D_SRC_DIR}

if [[ "$1" == "" ]]; then echo "ready"; exec bash -i; fi

echo ">> transferring to builder"
/etc/builder "$@"
