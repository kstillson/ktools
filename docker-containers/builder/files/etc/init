#!/bin/bash -e

# ---- build env controls

. /etc/env

# ---- prep build envir

STAMP="/tmp/init-stamp"
if [[ -f "$STAMP" ]]; then
  echo "${STAMP} already exists.  delete it if you really want to re-init.  skiping to builder phase."
  exec /etc/builder "$@"
fi

# fix permissions on ~.ssh (needed for ssh client from git clone)
chown -R root.root /root/.ssh

# link /rw/dv/var_cache_apk to /var/cache/apk
[[ -L /rw/dv/var_cache_apk ]] || { mkdir -p /rw/dv; ln -s /var/cache/apk /rw/dv/var_cache_apk; }

echo ">> pull source"
cd ${HOME}

if [[ -d ktools ]]; then
    read -p "${HOME}/ktools already exists; wipe and redownload from git? " x
    if [[ "$x" == "y" ]]; then rm -rf ktools; fi
fi

if [[ ! -d ktools ]]; then
    git clone git:git/ktools
else
    echo "ktools/ already exists; skipping git clone."
fi

# make externally mounted private.d visible to the build area.
cd ktools
[[ -L private.d ]] || ln -s ../ktools-ref/private.d

echo ">> install docker infra"
cd docker-infrastructure
make
make install

touch $STAMP

# ---- xfer to builder script

cd ${D_SRC_DIR}

if [[ "$1" == "" ]]; then echo "ready"; exec bash -i; fi

echo ">> transferring to builder"
exec /etc/builder "$@"
