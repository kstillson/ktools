 
# ----------------------------------------
# pi1

define host {
       use			generic-host
       host_name		pi1
       address			pi1
}

define service {
        use                     generic-service
        host_name               pi1
        service_description     pi1 ssh
        check_command           check_ssh
}

define service {
	use			generic-service
	host_name		pi1
	service_description	pi1 http
	check_command		check_http
}

## define service {
## 	use			generic-service
## 	host_name		pi1
## 	service_description	pi1 x10-watch
## 	check_command		check_healthz_port!1234
## }
## 

# ----------------------------------------
# home security boxes

define host {
       use			generic-host
       host_name		hs-mud
       address			hs-mud
}

define service {
	use			generic-service
	host_name		hs-mud
	service_description	hs-mud monitor
	check_command		check_healthz_port!8080
}

define service {
	use			generic-service
	host_name		hs-mud
	service_description	hs-mud keypad
	check_command		check_healthz_port!1235
}

# ----------

define host {
       use			generic-host
       host_name		hs-family
       address			hs-family
}

define service {
	use			generic-service
	host_name		hs-family
	service_description	hs-family monitor
	check_command		check_healthz_port!8080
}

define service {
	use			generic-service
	host_name		hs-family
	service_description	hs-family motion
	check_command		check_http_port!8081
}

# ----------

define host {
       use			generic-host
       host_name		hs-lounge
       address			hs-lounge
}

define service {
	use			generic-service
	host_name		hs-lounge
	service_description	hs-lounge monitor
	check_command		check_healthz_port!8080
}

define service {
	use			generic-service
	host_name		hs-lounge
	service_description	hs-lounge keypad
	check_command		check_healthz_port!1235
}

define service {
	use			generic-service
	host_name		hs-lounge
	service_description	hs-lounge motion
	check_command		check_http_port!8081
}

# ----------


define host {
       use			flaky-host
       host_name		hs-front
       address			hs-front
}

define service {
	use			flaky-service
	host_name		hs-front
	service_description	hs-front motion
	check_command		check_http_port!8081
}


# ----------------------------------------

define host {
       use			generic-host
       host_name		trellis1
       address			trellis1
}

define service {
	use			generic-service
	host_name		trellis1
	service_description	trellis1 monitor
	check_command		check_healthz_port!8080
}

# ----------------------------------------
# lightning controller

define host {
       use			generic-host
       host_name		lightning
       address			lightning
}

define service {
	use			generic-service
	host_name		lightning
	service_description	lightning monitor
	check_command		check_healthz
}

# ----------------------------------------
# firefly controller

define host {
       use			generic-host
       host_name		twinkle
       address			twinkle
}

define service {
	use			generic-service
	host_name		twinkle
	service_description	twinkle monitor
	check_command		check_healthz
}

# ----------------------------------------
# octopi box

## define host {
##        use			generic-host
##        host_name		octopi
##        address			octopi
## }
## 
## define service {
## 	use			generic-service
## 	host_name		octopi
## 	service_description	web
## 	check_command		check_http
## }


# ----------------------------------------
# glowbox2 controller

# 111718 offline for the winter
#
# define host {
#        use			generic-host
#        host_name		glowbox2
#        address			glowbox2
# }
# 
# define service {
# 	use			generic-service
# 	host_name		glowbox2
# 	service_description	glowbox2 monitor
# 	check_command		check_healthz
# }


# ----------------------------------------
# pi-bedroom thermostat

define host {
       use			flaky-host
       host_name		pibr
       address			pibr
}

define service {
	use			flaky-service
	host_name		pibr
	service_description	bed-led
	check_command		check_healthz_port!80
}

define service {
	use			flaky-service
	host_name		pibr
	service_description	thermostat
	check_command		check_healthz_port!8080
}


# ----------------------------------------
# landscape controlers

define host {
       use			generic-host
       host_name		pout
       address			pout
}

define service {
	use			generic-service
	host_name		pout
	service_description	pout controller
	check_command		check_healthz_port!8080
}

# 070621; not sufficiently stable for monitoring
## define host {
##        use			generic-host
##        host_name		pout2
##        address			pout2
## }
## 
## define service {
## 	use			generic-service
## 	host_name		pout2
## 	service_description	pout2 controller
## 	check_command		check_healthz_port!8080
## }
## 
