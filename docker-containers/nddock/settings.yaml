#
# :: SECURITY WARNING ::
#
# The combination of --userns=host and mounting /var/run/docker.sock as +w
# gives a reasonably easy method for root in this container to take over root
# in the real host.  Most of the processes in the container run as non-root,
# but none-the-less, this container is more for logical separation and
# maintenance.  With all these settings that bypass normal container
# isolation, you should not assume much security isolation is provided.
#
# And you really do NOT want to expose the internal webserver (port 19999) to
# any untrusted networks (and certainly not to to the Internet!).

# Enable the following if you need to override them for your setup:
# name: host-specific-name
# network: bridge
# ip: '-'

hostname: "HOSTNAME-ndd"

ports:
  - 19999:19999

# Log is too verbose to send to syslog. 
log: JSON

mount_persistent:
  - netdatacache: /var/cache/netdata
  - netdataconfig: /etc/netdata
  - netdatalib: /var/lib/netdata
  - /var/run/docker.sock: /var/run/docker.sock

mount_ro:
  - /etc/group: /host/etc/group
  - /etc/os-release: /host/etc/os-release
  - /etc/passwd: /host/etc/passwd
  - /proc: /host/proc
  - /sys: /host/sys

# You may wish to add your $NETDATA_CLAIM_TOKEN and/or $NETDATA_CLAIM_URL
#
extra_docker: "--cap-add SYS_PTRACE --env DO_NOT_TRACK=1 --env PGID=1024 --security-opt apparmor=unconfined --userns=host"
