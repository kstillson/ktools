'''Example procmon whitelist

This is an example based on the original author's actual whitelist (with a few
strategic entries removed).  To make your own, copy this as a starting point to
private.d/procmon_whitelist.py, and modify as needed for your system.
'''

from procmon_wl_type import WL

#      Container    user           child? rqrd?  regex
WHITELIST = [
    WL('*',         'root',        False, False, 'runc --root /var/run/docker/runtime-runc/moby --log'),
    WL('*',         'root',        False, False, 'runc init'),
    WL('/',         '*',           False, False, '/lib/systemd/systemd --(system|user)'),
    WL('/',         '*',           False, False, '\(sd-pam\)'),
    WL('/',         'blue-backup', False, False, 'rsync '),
    WL('/',         'blue-backup', False, False, 'sshd: blue-backup'),
    WL('/',         'ken',         False, False, '(/bin/sh -c *)?/usr/local/bin/hc tree'),
    WL('/',         'ken',         False, False, '/usr/sbin/sendmail'),
    WL('/',         'man',         False, False, '/usr/bin/mandb --quiet'),
    WL('/',         'messagebus',  False, True,  '/usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation'),
    WL('/',         'nobody',      False, False, '(/bin/bash -c *)?/bin/ping -c1 -q -w4 hs-front'),
    WL('/',         'nobody',      False, False, '/bin/sleep'),
    WL('/',         'nobody',      False, False, '/usr/bin/python3 /root/ktools/procmon/procmon'),
    WL('/',         'nobody',      False, True,  '/usr/local/bin/dhcp-helper -e eth1 -s 192.168.2.2'),
    WL('/',         'ntp',         False, False, '/usr/sbin/ntpd -p /var/run/ntpd.pid'),
    WL('/',         'root',        False, False, '(/bin/bash -c *)?.HC'),
    WL('/',         'root',        False, False, '(/bin/bash -c *)?{ .SSR -o'),
    WL('/',         'root',        False, False, '.*chmod 644 /var/run/dmap'),
    WL('/',         'root',        False, False, '/bin/(ba)?sh -c test -x /usr/sbin/anacron'),
    WL('/',         'root',        False, False, '/bin/(ba)?sh( -c)? */root/bin/d-run --cd rclonedock --fg --settings'),
    WL('/',         'root',        False, False, '/bin/login'),
    WL('/',         'root',        False, False, '/bin/systemd-tty-ask-password-agent'),
    WL('/',         'root',        False, False, '/sbin/agetty '),
    WL('/',         'root',        False, False, '/sbin/fstrim --fstab'),
    WL('/',         'root',        False, False, '/sbin/init'),
    WL('/',         'root',        False, False, '/usr/bin/containerd'),
    WL('/',         'root',        False, False, '/usr/bin/docker run --name rclonedock'),
    WL('/',         'root',        False, False, '/usr/bin/docker-proxy -proto'),
    WL('/',         'root',        False, False, '/usr/bin/dockerd -H'),
    WL('/',         'root',        False, False, '/usr/bin/python3 /root/bin/d-run --cd rclonedock --fg --settings'),
    WL('/',         'root',        False, False, '/usr/bin/python3 /usr/local/bin/hc'),
    WL('/',         'root',        False, False, '/usr/bin/python3 /usr/local/bin/sunsetter.py'),
    WL('/',         'root',        False, False, '/usr/lib/openssh/sftp-server'),
    WL('/',         'root',        False, False, '/usr/local/bin/hc'),
    WL('/',         'root',        False, False, '/usr/sbin/CRON -f'),
    WL('/',         'root',        False, False, '/usr/sbin/sendmail -i -FCronDaemon'),
    WL('/',         'root',        False, False, 'containerd-shim'),
    WL('/',         'root',        False, False, 'ddclient'),
    WL('/',         'root',        False, False, 'docker ps --format'),
    WL('/',         'root',        False, False, 'docker-containerd --config /var/run/docker/containerd/containerd.toml'),
    WL('/',         'root',        False, False, 'sleep'),
    WL('/',         'root',        False, False, 'sshd: root@notty'),
    WL('/',         'root',        False, True,  '/lib/systemd/systemd-journald'),
    WL('/',         'root',        False, True,  '/lib/systemd/systemd-logind'),
    WL('/',         'root',        False, True,  '/lib/systemd/systemd-udevd'),
    WL('/',         'root',        False, True,  '/sbin/dhclient'),
    WL('/',         'root',        False, True,  '/usr/bin/python3? /usr/bin/fail2ban-server'),
    WL('/',         'root',        False, True,  '/usr/lib/accountsservice/accounts-daemon'),
    WL('/',         'root',        False, True,  '/usr/lib/policykit-1/polkitd --no-debug'),
    WL('/',         'root',        False, True,  '/usr/sbin/acpid'),
    WL('/',         'root',        False, True,  '/usr/sbin/atd -f'),
    WL('/',         'root',        False, True,  '/usr/sbin/cron -f'),
    WL('/',         'root',        False, True,  '/usr/sbin/irqbalance'),
    WL('/',         'root',        False, True,  '/usr/sbin/rngd -r /dev/hwrng'),
    WL('/',         'root',        False, True,  '/usr/sbin/rsyslogd -n'),
    WL('/',         'root',        False, True,  '/usr/sbin/smartd -n'),
    WL('/',         'root',        False, True,  'sshd: /usr/sbin/sshd -D'),
    WL('/',         'root',        True,  False, '(/bin/sh -c *)?run-parts --report /etc/cron'),
    WL('/',         'root',        True,  False, '/bin/(ba)?sh( -c)? */root/bin/d 01 nagdock'),
    WL('/',         'root',        True,  False, '/bin/(ba)?sh( -c)? */usr/local/bin/update-ddns'),
    WL('/',         'root',        True,  False, '/bin/sh -c */root/bin/rsnap-diff'),
    WL('/',         'root',        True,  False, '/bin/sh -c */root/bin/run-rsnapshot'),
    WL('/',         'root',        True,  False, '/usr/sbin/logrotate /etc/logrotate.conf'),
    WL('/',         'root',        True,  False, 'bash -c chown droot.dwatch /rw/dv/blender/work/'),
    WL('/',         'root',        True,  False, 'sshd: (blue-backup|rsnap)'),
    WL('/',         'uuidd',       False, False, '/usr/sbin/uuidd'),
    WL('blender',   'droot',       False, False, '/bin/bash /etc/init '),
    WL('blender',   'droot',       False, False, 'blender -b'),
    WL('dlnadock',  'dminidlna',   False, False, '/usr/sbin/minidlnad'),
    WL('dlnadock',  'root',        False, False, '/bin/bash /etc/init'),
    WL('dlnadock',  'root',        False, False, '/usr/bin/encfs'),
    WL('dlnadock',  'root',        False, False, 'sleep'),
    WL('dnsdock',   'ddnsmasq',    False, True,  '/usr/sbin/dnsmasq --conf-file=/etc/dnsmasq/dnsmasq.conf'),
    WL('eximdock',  'dexim',       False, True,  '/usr/sbin/exim'),
    WL('filewatchdock', 'dwatch',  False, True,  '/usr/bin/python3 /home/watch/filewatch'),
    WL('fsdock',    'dken',        False, False, '/usr/lib/ssh/sftp-server'),
    WL('fsdock',    'dken',        False, False, 'sshd: ken@notty'),
    WL('fsdock',    'dpi2',        False, False, '/usr/lib/ssh/sftp-server'),
    WL('fsdock',    'dpi2',        False, False, 'sshd: pi2@notty'),
    WL('fsdock',    'droot',       False, False, '/usr/sbin/rsyslogd'),
    WL('fsdock',    'droot',       False, False, 'sshd: /usr/sbin/sshd -D'),
    WL('fsdock',    'droot',       False, False, 'sshd: ken \[priv\]'),
    WL('fsdock',    'droot',       False, False, 'sshd: pi2 \[priv\]'),
    WL('fsdock',    'dsshd',       False, False, 'sshd: ken'),
    WL('gitdock',   '*',           False, False, 'sshd: [a-z]* ?\[net\]'),
    WL('gitdock',   'droot',       False, False, 'sshd: [a-z0-9-]* \[priv\]'),
    WL('gitdock',   'droot',       False, False, 'sshd: \[accepted\]'),
    WL('gitdock',   'droot',       False, True,  '(sshd: )?/usr/sbin/sshd -D -e'),
    WL('home-control', 'dhc',      False, False, '/usr/bin/python3 /home/hc/home_control_service.py'),
    WL('homesecdock', 'dhs',       False, False, '/usr/bin/python3 /home/hs/homesec.py'),
    WL('keymaster', 'dkm',         False, False, '/usr/bin/python3 /home/km/km.py'),
    WL('lsyncdock', 'droot',       True,  True,  '/usr/bin/lsyncd -nodaemon /etc/lsyncd/lsyncd.conf.lua'),
    WL('nagdock',   'dnagios',     True,  True,  '/usr/sbin/nagios'),
    WL('nddock',    '201',         True,  False, '/usr/sbin/netdata.*'),
    WL('nddock',    'root',        False, False, '/bin/bash'),
    WL('prometheus','265534',      False, True,  '/bin/prometheus --config.file=/etc/prometheus/prometheus.yml'),    
    WL('rclonedock','droot',       False, False, '/bin/bash /etc/init'),
    WL('rclonedock','droot',       False, False, '/root/bin/rclone (sync|copy)'),
    WL('rclonedock','droot',       False, False, '/usr/bin/encfs --extpass /usr/local/bin/kmc encfs-default /root/gdrive /root/gdrive-efs'),
    WL('rclonedock','droot',       False, False, '/usr/bin/script --append --flush --return --command /etc/init'),
    WL('rclonedock','droot',       False, False, 'fgrep -v non'),
    WL('rclonedock','root',        False, False, '/bin/bash /etc/init'),
    WL('rclonedock','root',        False, False, '/root/bin/rclone (sync|copy)'),
    WL('rclonedock','root',        False, False, 'fgrep -v non'),
    WL('rsnapdock', 'root',        True,  False, '/bin/bash /etc/init'),
    WL('rsnapdock', 'root',        True,  False, '/usr/bin/perl -w /usr/bin/rsnapshot'),
    WL('sambadock', 'dken',        True,  False, '/usr/sbin/smbd'),
    WL('squiddock', 'dsquid',      False, False, '\(logfile-daemon'),
    WL('squiddock', 'dsquid',      False, False, '\(squid-'),
    WL('squiddock', 'dsquid',      False, False, '\(unlinkd'),
    WL('squiddock', 'dsquid',      False, True,  '/usr/sbin/squid'),
    WL('sshdock',   '*',           False, False, 'sshd: [a-z0-9]* ?\[net\]'),
    WL('sshdock',   'dhomesec1',   False, False, 'rsync --server'),
    WL('sshdock',   'dhomesec1',   False, False, 'sshd: homesec1'),
    WL('sshdock',   'dhomesec2',   False, False, 'rsync --server'),
    WL('sshdock',   'dhomesec2',   False, False, 'sshd: homesec2'),
    WL('sshdock',   'dhs-front',   False, False, 'rsync --server'),
    WL('sshdock',   'dhs-front',   False, False, 'sshd: hs-front'),
    WL('sshdock',   'dken',        False, False, 'rsync'),
    WL('sshdock',   'droot',       False, False, 'sshd: [A-Za-z0-9-]* \[priv\]'),
    WL('sshdock',   'droot',       False, False, 'sshd: \[accepted\]'),
    WL('sshdock',   'droot',       False, True,  '(sshd: )?/usr/sbin/sshd -D'),
    WL('sshdock',   'droot',       False, True,  '/usr/sbin/rsyslogd'),
    WL('sshdock',   'dsshd',       True,  False, 'sshd: '),
    WL('sshdock',   'dtunnel-glowbox1',   False, False, 'sshd: tunnel-glowbox1'),
    WL('syslogdock', 'dsyslog',    False, False, '/usr/sbin/ssmtp'),
    WL('syslogdock', 'dsyslog',    False, True,  '/bin/bash /usr/local/sbin/log-mailer'),
    WL('syslogdock', 'dsyslog',    False, True,  '/usr/bin/python. /usr/bin/supervisord -n -c /etc/supervisord.conf'),
    WL('syslogdock', 'dsyslog',    False, True,  '/usr/sbin/syslog-ng'),
    WL('webdock',   'dapache',     False, False, '(/usr/bin/python3 )?/usr/lib/cgi-bin/kcmd.cgi'),
    WL('webdock',   'dapache',     False, False, '(/usr/bin/python3 )?/usr/local/bin/party-lights'),
    WL('webdock',   'dapache',     False, False, '/bin/bash /usr/lib/cgi-bin/nagios-healthz.cgi'),
    WL('webdock',   'dapache',     False, False, '/usr/lib/nagios/cgi-bin/status.cgi'),
    WL('webdock',   'dapache',     False, True,  '/usr/sbin/httpd'),
]

#      Container    user           child? rqrd?  regex
GREYLIST = [
    WL('/',         'ken',         False, False,  'sshd: ken'),
    WL('/',         'root',        False, False,  '/usr/bin/python3 /usr/bin/glances'),
    WL('/',         'root',        False, False,  '/usr/bin/ssh-agent'),
    WL('/',         'root',        False, False,  'sshd: ken'),
    WL('/',         'root',        False, False,  'sshd: root \[priv\]'),
    WL('/',         'root',        True,  False,  'SCREEN -D -R'),
    WL('/',         'root',        True,  False,  'sshd: root@pts/.'),
    WL('git',       'root',        False, False,  'sshd: ken'),
]
